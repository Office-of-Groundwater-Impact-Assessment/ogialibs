on: [push]
jobs:
  pylint-and-tests:
    name: Unit test with ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        env_file: ["freeze-38.yml"]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          environment-file: ${{ matrix.env_file }}
      - name: Conda info
        shell: bash -l {0}
        run: conda info
      - name: Unit Tests
        shell: pwsh
        run: python -m unittest discover tests -v
  publish-to-pypi:
    name: Publish python package to Pypi
    runs-on: ubuntu-latest
    needs: pylint-and-tests
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      # - name: Versioneer Install
      #   shell: pwsh
      #   run: pip install versioneer
      # - name: Versioneer Setup
      #   shell: pwsh
      #   run: versioneer install
      - name: Autobump version
        run: |
          # from refs/tags/v1.2.3 get 1.2.3
          VERSION=$(echo $GITHUB_REF | sed 's#.*/v##')
          PLACEHOLDER='__version__ = "develop"'
          VERSION_FILE='ogialibs/__init__.py'

          # ensure the placeholder is there. If grep doesn't find the placeholder
          # it exits with exit code 1 and github actions aborts the build. 
          echo $VERSION
          grep "$PLACEHOLDER" "$VERSION_FILE"
          sed -i "s/$PLACEHOLDER/__version__ = \"${VERSION}\"/g" "$VERSION_FILE"
        shell: bash
      - name: Check Install
        shell: pwsh
        run: pip install .
      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: pypi-publish
        uses: pypa/gh-action-pypi-publish@v1.8.11    
